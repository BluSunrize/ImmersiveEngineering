def mainVersion = "0.10"
def buildNumber = "58"

// For those who want the bleeding edge
buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'

/*
// for people who want stable - not yet functional for MC 1.8.8 - we require the forgegradle 2.1 snapshot
plugins {
    id "net.minecraftforge.gradle.forge" version "2.0.2"
}
*/
version = "${mainVersion}-${buildNumber}" + getBuildNumber();
group= "blusunrize"
archivesBaseName = "ImmersiveEngineering"

sourceCompatibility = 1.8
targetCompatibility = 1.8

minecraft {
    version = "12.18.3.2185"
    //"1.9.4-12.17.0.1976"
    runDir = "run"

    replace '${version}', project.version
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20160701"
    //"snapshot_20160518" 1.9
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

repositories {
    maven { // JEI & Tinkers
        name 'DVS1 Maven FS'
        url 'http://dvs1.progwml6.com/files/maven'
    }
    maven { // WAILA
        name "ProfMobius Maven FS"
        url "http://mobiusstrip.eu/maven"
    }
    maven { // OpenComputers
        name "OpenComputers"
        url "http://maven.cil.li/"
    }
    maven { // TOP
        name 'tterrag maven'
        url "http://maven.tterrag.com/"
    }
    maven { // McJty's CompatLayer
        name 'K4 maven'
        url "http://maven.k-4u.nl/"
    }
    maven { // CraftTweaker (aka MineTweaker3)
        name 'jared maven'
        url "http://maven.blamejared.com/"
    }
    maven { //IC2
        name = "ic2"
        url = "http://maven.ic2.player.to/"
    }
}

dependencies {
    //1.9 dependencies
//    deobfCompile "mezz.jei:jei_1.9.4:3.6.+"
//    deobfCompile "mcp.mobius.waila:Waila:1.7.0-B3_1.9.4"
//    deobfCompile "slimeknights.mantle:Mantle:1.9.4-0.10.+"
//    deobfCompile "slimeknights:TConstruct:1.9.4-2.3.+"
    deobfCompile "mezz.jei:jei_1.10.2:3.14.+"
    deobfCompile "mcp.mobius.waila:Waila:1.7.0-B3_1.9.4"
    deobfCompile "slimeknights.mantle:Mantle:1.10.2-1.+"
    deobfCompile "slimeknights:TConstruct:1.10.2-2.5.6.+"
    deobfCompile "li.cil.oc:OpenComputers:MC1.10.2-1.6.0.+"
    deobfCompile "com.github.mcjty:compatlayer:1.10-0.+"//1.10-0.2.2
    deobfCompile "mcjty.theoneprobe:TheOneProbe:1.1x-1.+"//1.1x-1.4.4-55
    deobfCompile "MineTweaker3:MineTweaker3-MC1102-Main:1.10.2-3.0.+"//17.68
    deobfCompile 'net.industrial-craft:industrialcraft-2:2.6.+:dev'
}

jar {
    manifest {
        attributes 'FMLAT': 'ImmersiveEngineering_at.cfg'
    }
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
    manifest {
        attributes 'FMLAT': 'ImmersiveEngineering_at.cfg'
    }
}

task apiZip(type: Zip) {
    from(sourceSets.main.java) {
        include "blusunrize/immersiveengineering/api/**"
    }
    classifier = 'api'
}
task apiJar(type: Jar) {
    from(sourceSets.main.java) {
        include "blusunrize/immersiveengineering/api/**"
    }
    classifier = 'api'
}

artifacts {
    archives deobfJar
    archives apiZip
    archives apiJar
}

apply plugin: 'maven'
uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "file://" + (System.getenv("local_maven") != null ? System.getenv("local_maven") : System.getenv("bamboo_local_maven")))
            pom {
                groupId = project.group
                version = project.version
                artifactId = project.archivesBaseName
                project {
                    name project.archivesBaseName
                    packaging 'jar'
                    description project.archivesBaseName
                    url ''
                    scm {
                        url 'https://github.com/BluSunrize/ImmersiveEngineering'
                        connection 'scm:git:git@github.com/BluSunrize/ImmersiveEngineering.git'
                        developerConnection 'scm:git:git@github.com/BluSunrize/ImmersiveEngineering.git'
                    }
                    issueManagement {
                        system 'github'
                        url 'https://github.com/BluSunrize/ImmersiveEngineering/issues'
                    }

                    developers {
                        developer {
                            id 'BluSunrize'
                            name 'BluSunrize'
                            roles { role 'developer' }
                        }
                    }
                }
            }
        }
    }
}

String getBuildNumber() {
    String buildNumber = System.getenv("BUILD_NUMBER") != null ? System.getenv("BUILD_NUMBER") : ""
    if(buildNumber.equals("")) {
        buildNumber = System.getenv("bamboo_buildNumber") != null ? "." + System.getenv("bamboo_buildNumber") : ""
    }
    if(!buildNumber.equals("")) {
        buildNumber = "-" + buildNumber
    }
    return buildNumber
}
